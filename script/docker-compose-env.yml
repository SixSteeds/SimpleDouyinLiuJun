version: '3'

# 本地容器

services:
  #抽帧 docker pull jrottenberg/ffmpeg
  ffmpeg:
    image: jrottenberg/ffmpeg:3-scratch
    container_name: ffmpeg

  #etcd容器 - Etcd container
  etcd:
    image: bitnami/etcd:3.4.27
    container_name: etcd
    environment:
      ALLOW_NONE_AUTHENTICATION: "yes"
    ports:
      - "8090:2379"
    restart: always
    networks:
      - liujun_net

  #prometheus监控 — Prometheus for monitoring
  prometheus:
    image: bitnami/prometheus:2.46.0
    container_name: prometheus
    volumes:
      - ./deploy/prometheus/server/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./data/prometheus/data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
    restart: always
    user: root
    ports:
      - "8091:9090"
    networks:
      - liujun_net

  #查看prometheus监控数据 - Grafana to view Prometheus monitoring data
  grafana:
    image: grafana/grafana:8.0.6
    container_name: grafana
    hostname: grafana
    user: root
    restart: always
    volumes:
      - ./data/grafana/data:/var/lib/grafana
    ports:
      - "8092:3000"
    networks:
      - liujun_net
#    depends_on:
#      - prometheus

  #redis容器 - Redis container
  redis:
    image: redis:7.2
    container_name: redis
    ports:
      - "8094:6379"
    volumes:
      - "./data/redisData:/data"
    command: "redis-server --requirepass liujun  --appendonly yes"
    privileged: true
    restart: always
    networks:
      - liujun_net

  # kafka消息队列
  kafka:
    image: docker.io/bitnami/kafka:3.5
    container_name: kafka
    hostname: kafka
    networks:
      - liujun_net
    ports:
      - "9092:9092"
    volumes:
      - "./data/kafka:/bitnami/kafka"
    environment:
      # KRaft settings
      KAFKA_CFG_NODE_ID: 0
      KAFKA_CFG_PROCESS_ROLES: controller,broker
      KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: 0@kafka:9093
      # Listeners
      KAFKA_CFG_LISTENERS: PLAINTEXT://:9092,CONTROLLER://:9093
      KAFKA_CFG_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      KAFKA_CFG_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE: true


  # nginx网关 - Nginx gateway
  nginx:
    image: nginx:stable-alpine3.17
    container_name: nginx
    ports:
      - "9000:80"
    volumes:
      - ./conf/nginx_conf/nginx.conf:/etc/nginx/nginx.conf
      - ./conf/nginx_conf/conf.d:/etc/nginx/conf.d
      - ./conf/nginx_conf/log:/var/log/nginx
    restart: always
    networks:
      - liujun_net


  # 容器网络
networks:
  liujun_net:
    driver: bridge

