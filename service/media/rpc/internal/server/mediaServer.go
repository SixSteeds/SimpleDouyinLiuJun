// Code generated by goctl. DO NOT EDIT.
// Source: media.proto

package server

import (
	"context"

	"doushen_by_liujun/service/media/rpc/internal/logic"
	"doushen_by_liujun/service/media/rpc/internal/svc"
	"doushen_by_liujun/service/media/rpc/pb"
)

type MediaServer struct {
	svcCtx *svc.ServiceContext
	pb.UnimplementedMediaServer
}

func NewMediaServer(svcCtx *svc.ServiceContext) *MediaServer {
	return &MediaServer{
		svcCtx: svcCtx,
	}
}

// -----------------------鑱婂ぉ淇℃伅-----------------------
func (s *MediaServer) AddChatMessage(ctx context.Context, in *pb.AddChatMessageReq) (*pb.AddChatMessageResp, error) {
	l := logic.NewAddChatMessageLogic(ctx, s.svcCtx)
	return l.AddChatMessage(in)
}

func (s *MediaServer) UpdateChatMessage(ctx context.Context, in *pb.UpdateChatMessageReq) (*pb.UpdateChatMessageResp, error) {
	l := logic.NewUpdateChatMessageLogic(ctx, s.svcCtx)
	return l.UpdateChatMessage(in)
}

func (s *MediaServer) DelChatMessage(ctx context.Context, in *pb.DelChatMessageReq) (*pb.DelChatMessageResp, error) {
	l := logic.NewDelChatMessageLogic(ctx, s.svcCtx)
	return l.DelChatMessage(in)
}

func (s *MediaServer) GetChatMessageById(ctx context.Context, in *pb.GetChatMessageByIdReq) (*pb.GetChatMessageByIdResp, error) {
	l := logic.NewGetChatMessageByIdLogic(ctx, s.svcCtx)
	return l.GetChatMessageById(in)
}

func (s *MediaServer) SearchChatMessage(ctx context.Context, in *pb.SearchChatMessageReq) (*pb.SearchChatMessageResp, error) {
	l := logic.NewSearchChatMessageLogic(ctx, s.svcCtx)
	return l.SearchChatMessage(in)
}
