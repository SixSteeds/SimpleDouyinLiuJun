// Code generated by goctl. DO NOT EDIT.
// Source: chat.proto

package chat

import (
	"context"

	"doushen_by_liujun/service/chat/rpc/pb"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	AddChatMessageReq      = pb.AddChatMessageReq
	AddChatMessageResp     = pb.AddChatMessageResp
	ChatMessage            = pb.ChatMessage
	GetChatMessageByIdReq  = pb.GetChatMessageByIdReq
	GetChatMessageByIdResp = pb.GetChatMessageByIdResp
	Message                = pb.Message
	SearchChatMessageReq   = pb.SearchChatMessageReq
	SearchChatMessageResp  = pb.SearchChatMessageResp

	Chat interface {
		// -----------------------鑱婂ぉ淇℃伅-----------------------
		AddChatMessage(ctx context.Context, in *AddChatMessageReq, opts ...grpc.CallOption) (*AddChatMessageResp, error)
		GetChatMessageById(ctx context.Context, in *GetChatMessageByIdReq, opts ...grpc.CallOption) (*GetChatMessageByIdResp, error)
		SearchChatMessage(ctx context.Context, in *SearchChatMessageReq, opts ...grpc.CallOption) (*SearchChatMessageResp, error)
	}

	defaultChat struct {
		cli zrpc.Client
	}
)

func NewChat(cli zrpc.Client) Chat {
	return &defaultChat{
		cli: cli,
	}
}

// -----------------------鑱婂ぉ淇℃伅-----------------------
func (m *defaultChat) AddChatMessage(ctx context.Context, in *AddChatMessageReq, opts ...grpc.CallOption) (*AddChatMessageResp, error) {
	client := pb.NewChatClient(m.cli.Conn())
	return client.AddChatMessage(ctx, in, opts...)
}

func (m *defaultChat) GetChatMessageById(ctx context.Context, in *GetChatMessageByIdReq, opts ...grpc.CallOption) (*GetChatMessageByIdResp, error) {
	client := pb.NewChatClient(m.cli.Conn())
	return client.GetChatMessageById(ctx, in, opts...)
}

func (m *defaultChat) SearchChatMessage(ctx context.Context, in *SearchChatMessageReq, opts ...grpc.CallOption) (*SearchChatMessageResp, error) {
	client := pb.NewChatClient(m.cli.Conn())
	return client.SearchChatMessage(ctx, in, opts...)
}
